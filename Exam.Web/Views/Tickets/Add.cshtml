@model Exam.Models.Ticket

@{
    ViewBag.Title = "AddTicket";
}

<h2>@ViewBag.Title </h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="control-group">
        @Html.LabelFor(model => model.Category, "CategoryId", new { @class = "control-label" })
        <div class="controls">
            @Html.DropDownList("CategoryId", String.Empty)
            @Html.ValidationMessageFor(model => model.Category, null, new { @class = "help-inline" })
        </div>
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.Title, new { @class = "control-label" })
        <div class="controls">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title, null, new { @class = "help-inline" })
        </div>
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.Priority, "PriorityId", new { @class = "control-label" })
        <div class="controls">
            @Html.DropDownList("PriorityId", String.Empty)
            @Html.ValidationMessageFor(model => model.Priority, null, new { @class = "help-inline" })
        </div>
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.ScreenShotUrl, new { @class = "control-label" })
        <div class="controls">
            @Html.EditorFor(model => model.ScreenShotUrl)
            @Html.ValidationMessageFor(model => model.ScreenShotUrl, null, new { @class = "help-inline" })
        </div>
    </div>
    
    <div class="control-group">
        @Html.LabelFor(model => model.Description, new { @class = "control-label" })
        <div class="controls">
            @Html.TextAreaFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description, null, new { @class = "help-inline" })
        </div>
    </div>

    <div class="form-actions no-color">
        <input type="submit" value="Create" class="btn" />
    </div>
}